{"name": "用户标题2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=91.0.4472.124)", "trace": "self = <case.test_add_article1.TestAddXiangmu object at 0x000002001615AE48>\nlogin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"07f22138d327a7c8a9f690277a913c76\")>\n\n    @allure.story(\"用户故事2\")\n    @allure.title(\"用户标题2\")\n    def test_add_name_english(self, login):\n        '''用例描述：添加新项目，名称是英文\n        1.登录\n        2.打开项目管理页面\n        3.点击添加新项目，打开新添加页面\n        4.输入项目名称，别名，描述，最后提交\n        5.最后验证是否正常添加了项目\n        '''\n        driver = login\n        edit = ArticleclassifyPage(driver)\n        # 点击打开项目管理\n>       edit.click_xiangmu()\n\ntest_add_article1.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\add_article_page.py:25: in click_xiangmu\n    self.click(self.xiangmu)\n..\\common\\base.py:71: in click\n    ele = self.find(locator)\n..\\common\\base.py:42: in find\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\nE:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:71: in until\n    value = method(self._driver)\nE:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:64: in __call__\n    return _find_element(driver, self.locator)\nE:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:415: in _find_element\n    raise e\nE:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:411: in _find_element\n    return driver.find_element(*by)\nE:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\nE:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020015E492C8>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"chrome not reachable\",\"message\":\"chrome not reachable\\\\n  (Session info: ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774387A4+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77438774+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: chrome not reachable\nE         (Session info: chrome=91.0.4472.124)\n\nE:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException"}, "description": "用例描述：添加新项目，名称是英文\n        1.登录\n        2.打开项目管理页面\n        3.点击添加新项目，打开新添加页面\n        4.输入项目名称，别名，描述，最后提交\n        5.最后验证是否正常添加了项目\n        ", "steps": [{"name": "打开项目管理页面", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=91.0.4472.124)\n\n", "trace": "  File \"E:\\anzhuang\\pycharm\\untitled\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\anzhuang\\pycharm\\myproject1\\web_pytest_2020\\pages\\add_article_page.py\", line 25, in click_xiangmu\n    self.click(self.xiangmu)\n  File \"E:\\anzhuang\\pycharm\\myproject1\\web_pytest_2020\\common\\base.py\", line 71, in click\n    ele = self.find(locator)\n  File \"E:\\anzhuang\\pycharm\\myproject1\\web_pytest_2020\\common\\base.py\", line 42, in find\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n  File \"E:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 71, in until\n    value = method(self._driver)\n  File \"E:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 64, in __call__\n    return _find_element(driver, self.locator)\n  File \"E:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 415, in _find_element\n    raise e\n  File \"E:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 411, in _find_element\n    return driver.find_element(*by)\n  File \"E:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 978, in find_element\n    'value': value})['value']\n  File \"E:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"E:\\anzhuang\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1626246526648, "stop": 1626246557516}], "start": 1626246526648, "stop": 1626246557518, "uuid": "2574846d-0d48-4ddb-bbeb-6d4bdf90c08a", "historyId": "55690f7fbfe86a9ed16caf7138e0b43f", "testCaseId": "b12169c1ec3bb37ea0e30d8433abe220", "fullName": "case.test_add_article1.TestAddXiangmu#test_add_name_chinese", "labels": [{"name": "epic", "value": "epic对大story的一个描述性标签"}, {"name": "feature", "value": "测试模块feature"}, {"name": "story", "value": "用户故事2"}, {"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_add_article1"}, {"name": "subSuite", "value": "TestAddXiangmu"}, {"name": "host", "value": "DESKTOP-T6I1UU6"}, {"name": "thread", "value": "19240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_add_article1"}]}